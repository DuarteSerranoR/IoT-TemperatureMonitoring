[
    {
        "id": "eada78bffe31b0ee",
        "type": "tab",
        "label": "Room Temperature Comfort IoT Project",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2c26b9058db8173f",
        "type": "tab",
        "label": "Database Utils",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0cdf456eee4faca2",
        "type": "tab",
        "label": "Temperature Model",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "17ea79a5b6ded39b",
        "type": "tab",
        "label": "Final Result",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2a66695ea3e077da",
        "type": "mqtt-broker",
        "name": "hivemq",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "fcul_iot_g1_0/sensor",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "aa3f918d0607a86e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mosquitto_broker",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "c1bde5c5cae042e2",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "timescale_db",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "temperature_db",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "2000",
        "connectionTimeoutFieldType": "num",
        "user": "temp_monitor",
        "userFieldType": "str",
        "password": "fc2023",
        "passwordFieldType": "str"
    },
    {
        "id": "1dbbe41505f6a875",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "05ab338d28506311",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 1,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "b62be0f157db7a6d",
        "type": "ui_tab",
        "name": "Historical Data Dashboard Linear Chart",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "307997e3463c4b5d",
        "type": "ui_tab",
        "name": "Historical Data Dashboard Stats",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "570827782eb80e5e",
        "type": "ui_tab",
        "name": "Historical Data Dashboard Monthly Stats",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9137e1ef55ad6cd5",
        "type": "ui_tab",
        "name": "Historical Data Dashboard Daily Stats",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2115f8efaf2412c8",
        "type": "ui_tab",
        "name": "Temperature Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "88fc72d279b77248",
        "type": "ui_group",
        "name": "Historical Data Dashboard Stats Outside",
        "tab": "307997e3463c4b5d",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c0b7f86240cd365e",
        "type": "ui_group",
        "name": "Raw",
        "tab": "05ab338d28506311",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c0e788045b09315c",
        "type": "ui_group",
        "name": "Historical Data Dashboard Linar Chart",
        "tab": "b62be0f157db7a6d",
        "order": 1,
        "disp": true,
        "width": "27",
        "collapse": false,
        "className": ""
    },
    {
        "id": "08682ef44b2901a9",
        "type": "ui_group",
        "name": "Historical Data Dashboard Stats Inside",
        "tab": "307997e3463c4b5d",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "53efb4f83d4163ec",
        "type": "ui_group",
        "name": "Historical Data Dashboard Stats Total",
        "tab": "307997e3463c4b5d",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2f0107cd809f5bb8",
        "type": "ui_group",
        "name": "Monthly Variations",
        "tab": "570827782eb80e5e",
        "order": 4,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "57c5d568b219a078",
        "type": "ui_group",
        "name": "Historical Data Dashboard Stats Monthly Total",
        "tab": "570827782eb80e5e",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4b51cc31fa97707",
        "type": "ui_group",
        "name": "Historical Data Dashboard Stats Daily Total",
        "tab": "9137e1ef55ad6cd5",
        "order": 3,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c5a03ac5d9b08b46",
        "type": "ui_group",
        "name": "Historical Data Dashboard Monthly Stats Outside",
        "tab": "570827782eb80e5e",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0ac8192562804d6e",
        "type": "ui_group",
        "name": "Historical Data Dashboard Monthly Stats Inside",
        "tab": "570827782eb80e5e",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0aa1394ccb26afe8",
        "type": "ui_group",
        "name": "Historical Data Dashboard Daily Stats Inside",
        "tab": "9137e1ef55ad6cd5",
        "order": 2,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "13eafad7bf544662",
        "type": "ui_group",
        "name": "Historical Data Dashboard Daily Stats Outside",
        "tab": "9137e1ef55ad6cd5",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1eebc368271218b4",
        "type": "ui_group",
        "name": "Daily Variations",
        "tab": "9137e1ef55ad6cd5",
        "order": 4,
        "disp": true,
        "width": "41",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6fcb8fa133925954",
        "type": "ui_group",
        "name": "Temperature graph",
        "tab": "2115f8efaf2412c8",
        "order": 2,
        "disp": true,
        "width": "30",
        "collapse": false,
        "className": ""
    },
    {
        "id": "58eafe82a730c2c5",
        "type": "fitbit-credentials"
    },
    {
        "id": "41445dc30e2a6a35",
        "type": "mqtt-broker",
        "name": "mosquitoBroker",
        "broker": "34.175.93.216",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0b4eaef3d101ee44",
        "type": "postgreSQLConfig",
        "name": "basic",
        "host": "timescale_db",
        "hostFieldType": "str",
        "port": "5432",
        "portFieldType": "num",
        "database": "timescaledb",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": "10",
        "maxFieldType": "num",
        "idle": "1000",
        "idleFieldType": "num",
        "connectionTimeout": "10000",
        "connectionTimeoutFieldType": "num",
        "user": "timescaledb",
        "userFieldType": "str",
        "password": "password",
        "passwordFieldType": "str"
    },
    {
        "id": "7b1f1ae81f8afdb8",
        "type": "semaphore-config",
        "name": "Outside Reading Semaphore",
        "capacity": "1"
    },
    {
        "id": "b783a82559256d8c",
        "type": "semaphore-config",
        "name": "Inside Reading Semaphore",
        "capacity": "1"
    },
    {
        "id": "f95d161d15532dc1",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 1,
        "width": 11,
        "height": 1
    },
    {
        "id": "2e10e4f7f1d2a4cb",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 3,
        "width": 11,
        "height": 1
    },
    {
        "id": "9408e9b0f31daa64",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 4,
        "width": 11,
        "height": 1
    },
    {
        "id": "36a217dd96fa7fef",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 5,
        "width": 11,
        "height": 1
    },
    {
        "id": "0dfb5d528bdefdd7",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 6,
        "width": 30,
        "height": 1
    },
    {
        "id": "d3467ca7248669b5",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 8,
        "width": 8,
        "height": 1
    },
    {
        "id": "65582aafb5c6187d",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "67ab6a0cac6d2a62",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 11,
        "width": 8,
        "height": 1
    },
    {
        "id": "2862cb63db94d988",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 12,
        "width": 8,
        "height": 1
    },
    {
        "id": "b7e011f0afd5b334",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 15,
        "width": 2,
        "height": 1
    },
    {
        "id": "48d12e16dfc94b33",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "b819059b51e5e869",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 19,
        "width": 30,
        "height": 1
    },
    {
        "id": "c1359d569a1e2908",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 21,
        "width": 8,
        "height": 1
    },
    {
        "id": "f2887d19d583edd8",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 22,
        "width": 8,
        "height": 1
    },
    {
        "id": "be230a8c891bfd17",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 24,
        "width": 8,
        "height": 1
    },
    {
        "id": "827d508522337d6a",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 25,
        "width": 8,
        "height": 1
    },
    {
        "id": "9a34cdde78926c7c",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 28,
        "width": 2,
        "height": 1
    },
    {
        "id": "69c266bd7097f590",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 31,
        "width": 2,
        "height": 1
    },
    {
        "id": "45fa11db3ee46545",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 32,
        "width": 30,
        "height": 1
    },
    {
        "id": "15302957df952158",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 36,
        "width": 22,
        "height": 1
    },
    {
        "id": "3a6f9cc30dbd5b2f",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 37,
        "width": 30,
        "height": 1
    },
    {
        "id": "ebd73cb560c96622",
        "type": "ui_spacer",
        "z": "17ea79a5b6ded39b",
        "name": "spacer",
        "group": "6fcb8fa133925954",
        "order": 38,
        "width": 30,
        "height": 1
    },
    {
        "id": "8acc2b9b210c0142",
        "type": "csv",
        "z": "eada78bffe31b0ee",
        "name": "parse csv",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "b28e92c978f4892e",
                "ef4d7c8c69c12e9a"
            ]
        ]
    },
    {
        "id": "ea7d6809f2eedd0a",
        "type": "inject",
        "z": "eada78bffe31b0ee",
        "name": "executor",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 100,
        "y": 60,
        "wires": [
            [
                "2c654635032a7a97"
            ]
        ]
    },
    {
        "id": "2c654635032a7a97",
        "type": "file in",
        "z": "eada78bffe31b0ee",
        "name": "historical data csv file",
        "filename": "/app/historical.data",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 300,
        "y": 60,
        "wires": [
            [
                "8acc2b9b210c0142"
            ]
        ]
    },
    {
        "id": "186fce137cd7569b",
        "type": "debug",
        "z": "eada78bffe31b0ee",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 140,
        "wires": []
    },
    {
        "id": "ec267fb36c8b748f",
        "type": "function",
        "z": "eada78bffe31b0ee",
        "name": "linear chart format",
        "func": "var r_arr_out = [];\nvar r_arr_in = [];\nmsg.payload.forEach(function(_msg) {\n    if (_msg.label == \"outside\") {\n        let r = { \"x\": _msg.date, \"y\": _msg.temperature };\n        r_arr_out.push(r)\n    }\n    if (_msg.label == \"inside\") {\n        let r = { \"x\": _msg.date, \"y\": _msg.temperature };\n        r_arr_in.push(r)\n    }\n});\nmsg.payload = [{\n    \"series\": [\"outside\",\"inside\"],\n    \"data\": [r_arr_out,r_arr_in],\n    //\"labels\": [\"\"]\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 180,
        "wires": [
            [
                "320ae2d07171a7eb",
                "186fce137cd7569b"
            ]
        ]
    },
    {
        "id": "462386d8da8e4ff1",
        "type": "comment",
        "z": "eada78bffe31b0ee",
        "name": "",
        "info": "https://stevesnoderedguide.com/using-the-node-red-chart-node",
        "x": 80,
        "y": 20,
        "wires": []
    },
    {
        "id": "c9c439e4de4a9698",
        "type": "function",
        "z": "eada78bffe31b0ee",
        "name": "process all data",
        "func": "\nlet max_val_total = -9000;\nlet max_val_total_date = \"\";\n\nlet max_val_in = -9000;\nlet max_val_in_date = \"\";\n\nlet max_val_out = -9000;\nlet max_val_out_date = \"\";\n\nlet min_val_total = 9000;\nlet min_val_total_date = \"\";\n\nlet min_val_in = 9000;\nlet min_val_in_date = \"\";\n\nlet min_val_out = 9000;\nlet min_val_out_date = \"\";\n\nvar outCount = 0;\nvar outSum = Number(0.0);\n\nvar inCount = 0;\nvar inSum = Number(0.0);\n\nvar totalCount = 0;\nvar totalSum = Number(0.0);\n\n//\nlet debugIn = [];\n//\n\nmsg.payload.forEach(\n    function (\n        /** @type {{ label: string; temperature: Number; date: string; }} */ _msg) {\n    \n    let label = _msg.label;\n    let temp = parseFloat(_msg.temperature);\n    if (isNaN(temp))\n        throw _msg;\n    let date = _msg.date;\n\n    if (label == \"outside\") {\n        if (temp > max_val_out) {\n            max_val_out = temp;\n            max_val_out_date = date;\n        }\n        if (temp < min_val_out) {\n            min_val_out = temp;\n            min_val_out_date = date;\n        }\n        outCount += 1;\n        outSum += temp;\n    } else if (label == \"inside\") {\n        if (temp > max_val_in) {\n            max_val_in = temp;\n            max_val_in_date = date;\n        }\n        if (temp < min_val_in) {\n            min_val_in = temp;\n            min_val_in_date = date;\n        }\n        inCount += 1;\n        inSum += temp;\n        //\n        debugIn.push(temp);\n        //\n    }\n    if (temp > max_val_total) {\n        max_val_total = temp;\n        max_val_total_date = date;\n    }\n    if (temp < min_val_total) {\n        min_val_total = temp;\n        min_val_total_date = date;\n    }\n    totalCount += 1;\n    totalSum += temp;\n});\n\nlet totalAvg = totalSum / totalCount;\nlet inAvg = inSum / inCount;\nlet outAvg = outSum / outCount;\n\n// Compute Standard Deviation\nvar totalDevSums = 0;\nvar inDevSums = 0;\nvar outDevSums = 0;\nmsg.payload.forEach(\n    function (\n        /** @type {{ label: string; temperature: Number; date: string; }} */ _msg) {\n\n    let label = _msg.label;\n    let temp = parseFloat(_msg.temperature);\n    if (isNaN(temp))\n        throw _msg;\n    \n\n    if (label == \"outside\") {\n        let outDev = (temp - outAvg) ** 2;\n        outDevSums += outDev;\n    } else if (label == \"inside\") {\n        let inDev = (temp - inAvg) ** 2;\n        inDevSums += inDev;\n    }\n    let totalDev = (temp - totalAvg)**2;\n    totalDevSums += totalDev;\n});\n\nlet outStandardDev = outDevSums / outCount;\nlet inStandardDev = inDevSums / inCount;\nlet totalStandardDev = totalDevSums / totalCount;\n\nif (\"type\" in msg) {\n    msg.payload = {\n        \"total\": {\n            \"type\": `${msg.type}-total`,\n            \"max\": { \"val\": max_val_total, \"date\": max_val_total_date },\n            \"min\": { \"val\": min_val_total, \"date\": min_val_total_date },\n            \"avg\": totalAvg,\n            \"standDev\": totalStandardDev,\n\n            \"count\": totalCount,\n            \"sum\": totalSum\n        },\n        \"inside\": {\n            \"type\": `${msg.type}-inside`,\n            \"max\": { \"val\": max_val_in, \"date\": max_val_in_date },\n            \"min\": { \"val\": min_val_in, \"date\": min_val_in_date },\n            \"avg\": inAvg,\n            \"standDev\": inStandardDev,\n\n            \"count\": inCount,\n            \"sum\": inSum\n        },\n        \"outside\": {\n            \"type\": `${msg.type}-outside`,\n            \"max\": { \"val\": max_val_out, \"date\": max_val_out_date },\n            \"min\": { \"val\": min_val_out, \"date\": min_val_out_date },\n            \"avg\": outAvg,\n            \"standDev\": outStandardDev,\n\n            \"count\": outCount,\n            \"sum\": outSum\n        }\n    }\n} else {\n    msg.payload = { \n        \"total\": {\n            \"type\": \"total\",\n            \"max\": { \"val\": max_val_total, \"date\": max_val_total_date },\n            \"min\": { \"val\": min_val_total, \"date\": min_val_total_date },\n            \"avg\": totalAvg,\n            \"standDev\": totalStandardDev,\n\n            \"count\": totalCount,\n            \"sum\": totalSum\n        },\n        \"inside\": {\n            \"type\": \"inside\",\n            \"max\": { \"val\": max_val_in, \"date\": max_val_in_date },\n            \"min\": { \"val\": min_val_in, \"date\": min_val_in_date },\n            \"avg\": inAvg,\n            \"standDev\": inStandardDev,\n\n            \"count\": inCount,\n            \"sum\": inSum\n        },\n        \"outside\": {\n            \"type\": \"outside\",\n            \"max\": { \"val\": max_val_out, \"date\": max_val_out_date },\n            \"min\": { \"val\": min_val_out, \"date\": min_val_out_date },\n            \"avg\": outAvg,\n            \"standDev\": outStandardDev,\n\n            \"count\": outCount,\n            \"sum\": outSum\n        }\n    }\n}\n\nmsg.debug = {\n        \"total\": [],\n        \"inside\": debugIn,\n        \"outside\": []\n    }\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 360,
        "wires": [
            [
                "e8c8cc8e79862ec6",
                "66a77384579192dd",
                "066996cca95d0dea"
            ]
        ]
    },
    {
        "id": "e8c8cc8e79862ec6",
        "type": "debug",
        "z": "eada78bffe31b0ee",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 400,
        "wires": []
    },
    {
        "id": "66a77384579192dd",
        "type": "split",
        "z": "eada78bffe31b0ee",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 670,
        "y": 460,
        "wires": [
            [
                "f08fc899593c88a8"
            ]
        ]
    },
    {
        "id": "f08fc899593c88a8",
        "type": "switch",
        "z": "eada78bffe31b0ee",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "inside",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "outside",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "monthly-total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "monthly-inside",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "monthly-outside",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "monthly-variations",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "daily-total",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "daily-inside",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "daily-outside",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "daily-variations",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 11,
        "x": 670,
        "y": 780,
        "wires": [
            [
                "44c5a5b1b5067094",
                "5b1317c580dbf498",
                "42daf970b476f548",
                "57ed463baf47cc23"
            ],
            [
                "d19ba005af0079c5",
                "cfcfaf5bb155eac0",
                "b5b4c5bdf91f660c",
                "4f9c23e0fd1aa44f"
            ],
            [
                "464de72d8af7fad0",
                "b2a3b733fd36d831",
                "b4b6fa28585b9f1a",
                "1c93576d7bcc4a64"
            ],
            [
                "3ba1ee73f2b08138",
                "6d4f643fcfc8673e",
                "09c55d14d937b9c6",
                "973bee0fd20c0a8d"
            ],
            [
                "114df67d336fa73b",
                "58cfa08ffa7a792d",
                "7adbf78ef9dd81c0",
                "059fdc6d07830e11"
            ],
            [
                "bd1863aa0e5ee344",
                "439f6d511b9ebfec",
                "54eabe9c71d9ccdc",
                "4d5b62b8020aa97e"
            ],
            [
                "432cf7d7d0ed973a"
            ],
            [
                "a484d1231c645126",
                "1d64f8ad0e29b4e6",
                "cab51cc189bfd58e",
                "40e6deb1181f750a"
            ],
            [
                "ba28e96f2429ca8d",
                "e2bf61b364cebcc5",
                "6571cc53ef633e45",
                "1755752ef1d2dfdd"
            ],
            [
                "a5060cbe537c192c",
                "05781869da124c36",
                "4ea58d0ca37a800d",
                "d427eb24ccdce873"
            ],
            [
                "8cb4f9a00c6b2872"
            ]
        ]
    },
    {
        "id": "066996cca95d0dea",
        "type": "debug",
        "z": "eada78bffe31b0ee",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "debug",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 360,
        "wires": []
    },
    {
        "id": "b28e92c978f4892e",
        "type": "debug",
        "z": "eada78bffe31b0ee",
        "name": "debug 9",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 120,
        "wires": []
    },
    {
        "id": "ef4d7c8c69c12e9a",
        "type": "function",
        "z": "eada78bffe31b0ee",
        "name": "filter",
        "func": "msg.payload = msg.payload.filter(\n    function(/** @type {{ temperature: string | number; }} */ o){\n\n        let temp = parseFloat(o.temperature);\n        if (isNaN(temp))\n            return false;\n        else\n            return true;\n    });\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 180,
        "wires": [
            [
                "ec267fb36c8b748f",
                "c9c439e4de4a9698",
                "b28e92c978f4892e",
                "1558639f5cbf8f07",
                "0f084666f33326b4"
            ]
        ]
    },
    {
        "id": "1558639f5cbf8f07",
        "type": "function",
        "z": "eada78bffe31b0ee",
        "name": "monthly average filter",
        "func": "\nmsg.type = \"monthly\";\nvar o_cache_inside = null;\nvar o_cache_outside = null;\nvar monthly_payload = [];\nmsg.payload.map(function (o) {\n    let _ = o.date.split(\"-\")\n    o.date = _[0] + \"-\" + _[1];\n    return o;\n}).forEach(function (o) {\n    if (o.label == \"inside\") {\n        if (o_cache_inside === null) {\n            o_cache_inside = o;\n            o_cache_inside.count = 1;\n        } else if (o_cache_inside.date != o.date) {\n            o_cache_inside.temperature = o_cache_inside.temperature / o_cache_inside.count;\n            monthly_payload.push(o_cache_inside);\n            o_cache_inside = o;\n            o_cache_inside.count = 1;\n        } else {\n            o_cache_inside.temperature += o.temperature;\n            o_cache_inside.count++;\n        }\n    } else { // outside\n        if (o_cache_outside === null) {\n            o_cache_outside = o;\n            o_cache_outside.count = 1;\n        } else if (o_cache_outside.date != o.date) {\n            o_cache_outside.temperature = o_cache_outside.temperature / o_cache_outside.count;\n            monthly_payload.push(o_cache_outside);\n            o_cache_outside = o;\n            o_cache_outside.count = 1;\n        } else {\n            o_cache_outside.temperature += o.temperature;\n            o_cache_outside.count++;\n        }\n    }\n});\n\nif (o_cache_inside) {\n    o_cache_inside.temperature = o_cache_inside.temperature / o_cache_inside.count;\n    monthly_payload.push(o_cache_inside);\n}\nif (o_cache_outside) {\n    o_cache_outside.temperature = o_cache_outside.temperature / o_cache_outside.count;\n    monthly_payload.push(o_cache_outside);\n}\n\n\nmsg.payload = monthly_payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 360,
        "wires": [
            [
                "c9c439e4de4a9698",
                "b6152f80dbd5b519"
            ]
        ]
    },
    {
        "id": "0f084666f33326b4",
        "type": "function",
        "z": "eada78bffe31b0ee",
        "name": "daily average filter",
        "func": "\nmsg.type = \"daily\";\nvar o_cache_inside = null;\nvar o_cache_outside = null;\nvar daily_payload = [];\nmsg.payload.map(function (o) {\n    o.date = o.date.split(\" \")[0];\n    return o;\n}).forEach(function(o) {\n    if (o.label == \"inside\") {\n        if (o_cache_inside === null) {\n            o_cache_inside = o;\n            o_cache_inside.count = 1;\n        } else if (o_cache_inside.date != o.date) {\n            o_cache_inside.temperature = o_cache_inside.temperature / o_cache_inside.count;\n            daily_payload.push(o_cache_inside);\n            o_cache_inside = o;\n            o_cache_inside.count = 1;\n        } else {\n            o_cache_inside.temperature += o.temperature;\n            o_cache_inside.count++;\n        }\n    } else { // outside\n        if (o_cache_outside === null) {\n            o_cache_outside = o;\n            o_cache_outside.count = 1;\n        } else if (o_cache_outside.date != o.date) {\n            o_cache_outside.temperature = o_cache_outside.temperature / o_cache_outside.count;\n            daily_payload.push(o_cache_outside);\n            o_cache_outside = o;\n            o_cache_outside.count = 1;\n        } else {\n            o_cache_outside.temperature += o.temperature;\n            o_cache_outside.count++;\n        }\n    }\n});\n\nif (o_cache_inside) {\n    o_cache_inside.temperature = o_cache_inside.temperature / o_cache_inside.count;\n    daily_payload.push(o_cache_inside);\n}\nif (o_cache_outside) {\n    o_cache_outside.temperature = o_cache_outside.temperature / o_cache_outside.count;\n    daily_payload.push(o_cache_outside);\n}\n\n\nmsg.payload = daily_payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 400,
        "wires": [
            [
                "c9c439e4de4a9698",
                "b6152f80dbd5b519"
            ]
        ]
    },
    {
        "id": "b6152f80dbd5b519",
        "type": "function",
        "z": "eada78bffe31b0ee",
        "name": "map graph data",
        "func": "var r_arr_out = [];\nvar r_arr_in = [];\nmsg.payload.forEach(function (_msg) {\n    if (_msg.label == \"outside\") {\n        let r = { \"x\": _msg.date, \"y\": _msg.temperature };\n        r_arr_out.push(r)\n    }\n    if (_msg.label == \"inside\") {\n        let r = { \"x\": _msg.date, \"y\": _msg.temperature };\n        r_arr_in.push(r)\n    }\n});\nmsg.payload = {\n    \"type\": `${msg.type}-variations`,\n    \"series\": [\"outside\", \"inside\"],\n    \"data\": [r_arr_out, r_arr_in],\n    //\"labels\": [\"\"]\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 780,
        "wires": [
            [
                "f08fc899593c88a8",
                "c9beeaaa23aefb0e"
            ]
        ]
    },
    {
        "id": "c9beeaaa23aefb0e",
        "type": "debug",
        "z": "eada78bffe31b0ee",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 840,
        "wires": []
    },
    {
        "id": "432cf7d7d0ed973a",
        "type": "function",
        "z": "eada78bffe31b0ee",
        "name": "format monthly variations",
        "func": "\nmsg.payload = [{\n    \"series\": msg.payload.series,\n    \"data\": msg.payload.data,\n    //\"labels\": [\"\"]\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 1020,
        "wires": [
            [
                "7ceb591baaf0a2db"
            ]
        ]
    },
    {
        "id": "8cb4f9a00c6b2872",
        "type": "function",
        "z": "eada78bffe31b0ee",
        "name": "format daily variations",
        "func": "\nmsg.payload = [{\n    \"series\": msg.payload.series,\n    \"data\": msg.payload.data,\n    //\"labels\": [\"\"]\n}];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1580,
        "wires": [
            [
                "c5d0f978928948ee"
            ]
        ]
    },
    {
        "id": "42daf970b476f548",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "53efb4f83d4163ec",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "average total",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 950,
        "y": 100,
        "wires": []
    },
    {
        "id": "57ed463baf47cc23",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "53efb4f83d4163ec",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "standard deviation total",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "b5b4c5bdf91f660c",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "08682ef44b2901a9",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "average inside",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 960,
        "y": 260,
        "wires": []
    },
    {
        "id": "4f9c23e0fd1aa44f",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "08682ef44b2901a9",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "standard deviation inside",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 990,
        "y": 300,
        "wires": []
    },
    {
        "id": "b4b6fa28585b9f1a",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "88fc72d279b77248",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "average outside",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 960,
        "y": 420,
        "wires": []
    },
    {
        "id": "1c93576d7bcc4a64",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "88fc72d279b77248",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "standard deviation outside",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 1000,
        "y": 460,
        "wires": []
    },
    {
        "id": "09c55d14d937b9c6",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "57c5d568b219a078",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "average total monthly",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 980,
        "y": 600,
        "wires": []
    },
    {
        "id": "973bee0fd20c0a8d",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "57c5d568b219a078",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "standard deviation total monthly",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 640,
        "wires": []
    },
    {
        "id": "7adbf78ef9dd81c0",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "0ac8192562804d6e",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "average inside monthly",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 990,
        "y": 760,
        "wires": []
    },
    {
        "id": "059fdc6d07830e11",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "0ac8192562804d6e",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "standard deviation inside monthly",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 1020,
        "y": 800,
        "wires": []
    },
    {
        "id": "54eabe9c71d9ccdc",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "c5a03ac5d9b08b46",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "average outside monthly",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 990,
        "y": 920,
        "wires": []
    },
    {
        "id": "4d5b62b8020aa97e",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "c5a03ac5d9b08b46",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "standard deviation outside monthly",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 1020,
        "y": 960,
        "wires": []
    },
    {
        "id": "cab51cc189bfd58e",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "a4b51cc31fa97707",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "average total daily",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 970,
        "y": 1160,
        "wires": []
    },
    {
        "id": "40e6deb1181f750a",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "a4b51cc31fa97707",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "standard deviation total daily",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 1000,
        "y": 1200,
        "wires": []
    },
    {
        "id": "6571cc53ef633e45",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "0aa1394ccb26afe8",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "average inside daily",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 980,
        "y": 1320,
        "wires": []
    },
    {
        "id": "1755752ef1d2dfdd",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "0aa1394ccb26afe8",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "standard deviation inside daily",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1360,
        "wires": []
    },
    {
        "id": "4ea58d0ca37a800d",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "13eafad7bf544662",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "average outside daily",
        "label": "Average",
        "format": "{{msg.payload.avg | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 980,
        "y": 1480,
        "wires": []
    },
    {
        "id": "d427eb24ccdce873",
        "type": "ui_text",
        "z": "eada78bffe31b0ee",
        "group": "13eafad7bf544662",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "standard deviation outside daily",
        "label": "Standard Deviation",
        "format": "{{msg.payload.standDev | number:2}}",
        "layout": "col-center",
        "className": "",
        "x": 1010,
        "y": 1520,
        "wires": []
    },
    {
        "id": "320ae2d07171a7eb",
        "type": "ui_chart",
        "z": "eada78bffe31b0ee",
        "name": "",
        "group": "c0e788045b09315c",
        "order": 0,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "YYYY-MM-DD HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 690,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "7ceb591baaf0a2db",
        "type": "ui_chart",
        "z": "eada78bffe31b0ee",
        "name": "",
        "group": "2f0107cd809f5bb8",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "monthly variations",
        "chartType": "line",
        "legend": "true",
        "xformat": "YYYY-MM-DD",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1270,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "c5d0f978928948ee",
        "type": "ui_chart",
        "z": "eada78bffe31b0ee",
        "name": "",
        "group": "1eebc368271218b4",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "daily variations",
        "chartType": "line",
        "legend": "true",
        "xformat": "YYYY-MM-DD",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1260,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "44c5a5b1b5067094",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "53efb4f83d4163ec",
        "name": "maximum total",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>Total</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "5b1317c580dbf498",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "53efb4f83d4163ec",
        "name": "minimum total",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d19ba005af0079c5",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "08682ef44b2901a9",
        "name": "maximum inside",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>Total</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "cfcfaf5bb155eac0",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "08682ef44b2901a9",
        "name": "minimum inside",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 960,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "464de72d8af7fad0",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "88fc72d279b77248",
        "name": "maximum outside",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>Total</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 970,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "b2a3b733fd36d831",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "88fc72d279b77248",
        "name": "minimum outside",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 970,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "3ba1ee73f2b08138",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "57c5d568b219a078",
        "name": "maximum total monthly",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<h1>Monthly</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "6d4f643fcfc8673e",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "57c5d568b219a078",
        "name": "minimum total monthly",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "114df67d336fa73b",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "0ac8192562804d6e",
        "name": "maximum inside monthly",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>Monthly</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "58cfa08ffa7a792d",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "0ac8192562804d6e",
        "name": "minimum inside monthly",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "bd1863aa0e5ee344",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "c5a03ac5d9b08b46",
        "name": "maximum outside monthly",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>Monthly</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "439f6d511b9ebfec",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "c5a03ac5d9b08b46",
        "name": "minimum outside monthly",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 990,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "a484d1231c645126",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "a4b51cc31fa97707",
        "name": "maximum total daily",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>Daily</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "1d64f8ad0e29b4e6",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "a4b51cc31fa97707",
        "name": "minimum total daily",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 970,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "ba28e96f2429ca8d",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "0aa1394ccb26afe8",
        "name": "maximum inside daily",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>Daily</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "e2bf61b364cebcc5",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "0aa1394ccb26afe8",
        "name": "minimum inside daily",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "a5060cbe537c192c",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "13eafad7bf544662",
        "name": "maximum outside daily",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<h1>Daily</h1>\n<p>Maximum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.max.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "05781869da124c36",
        "type": "ui_template",
        "z": "eada78bffe31b0ee",
        "group": "13eafad7bf544662",
        "name": "minimum outside daily",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<p>Minimum</p>\n<table>\n\n    <tr>\n        <th style=\"width: 50%;\">date</th>\n        <th style=\"width: 50%;\">val</th>\n    </tr>\n    <tr>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.date.toFixed(2)\" /></th>\n        <th style=\"width: 50%;\"><div ng-bind-html=\"msg.payload.min.val.toFixed(2)\" /></th>\n    </tr>\n\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "2a500ffbb2347df6",
        "type": "inject",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "Load Historical Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 180,
        "y": 60,
        "wires": [
            [
                "70cb1d24919f6d6c"
            ]
        ]
    },
    {
        "id": "ce6ffb3b803686fc",
        "type": "file in",
        "z": "2c26b9058db8173f",
        "name": "read historical data csv file",
        "filename": "/app/historical.data",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 700,
        "y": 60,
        "wires": [
            [
                "dfe9b04a6dcc580a"
            ]
        ]
    },
    {
        "id": "dfe9b04a6dcc580a",
        "type": "csv",
        "z": "2c26b9058db8173f",
        "name": "parse csv",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 920,
        "y": 60,
        "wires": [
            [
                "f32d4832927a420f"
            ]
        ]
    },
    {
        "id": "f32d4832927a420f",
        "type": "function",
        "z": "2c26b9058db8173f",
        "name": "",
        "func": "\nlet date = msg.payload.date;\nlet temperature = msg.payload.temperature;\nlet label = msg.payload.label;\n\nmsg.params = [date, temperature, label];\nif (temperature != null)\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 60,
        "wires": [
            [
                "c5ab34a68f470922"
            ]
        ]
    },
    {
        "id": "c5ab34a68f470922",
        "type": "delay",
        "z": "2c26b9058db8173f",
        "name": "message pooler",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "3500",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1260,
        "y": 60,
        "wires": [
            [
                "501e883d75814a02"
            ]
        ]
    },
    {
        "id": "c75e2a82787cfb26",
        "type": "inject",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "Load Online Data",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "c828a0a1d636b849"
            ]
        ]
    },
    {
        "id": "691504a54d0a2ebf",
        "type": "file in",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "read online data csv file",
        "filename": "/app/online.data",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 690,
        "y": 480,
        "wires": [
            [
                "b5c7e71320bf45d9"
            ]
        ]
    },
    {
        "id": "b5c7e71320bf45d9",
        "type": "csv",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "parse csv",
        "sep": ",",
        "hdrin": true,
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 920,
        "y": 480,
        "wires": [
            [
                "f765bef7caa879ac"
            ]
        ]
    },
    {
        "id": "3c6f6f304d9e570c",
        "type": "function",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "",
        "func": "\nlet date = msg.payload.date;\nlet temperature = msg.payload.temperature;\nlet label = msg.payload.label;\n\nmsg.params = [date, temperature, label];\nif (temperature != null)\n    return msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 540,
        "wires": [
            [
                "c4e4382e292dfdfe"
            ]
        ]
    },
    {
        "id": "f765bef7caa879ac",
        "type": "delay",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "message pooler",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "3500",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1160,
        "y": 480,
        "wires": [
            [
                "7d2ca4fae2fd45f5"
            ]
        ]
    },
    {
        "id": "6958fb34e42edb4d",
        "type": "mqtt in",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "2",
        "datatype": "auto",
        "broker": "2a66695ea3e077da",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 540,
        "wires": [
            [
                "3c6f6f304d9e570c"
            ]
        ]
    },
    {
        "id": "7d2ca4fae2fd45f5",
        "type": "mqtt out",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "aa3f918d0607a86e",
        "x": 1430,
        "y": 480,
        "wires": []
    },
    {
        "id": "70cb1d24919f6d6c",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "Truncate Historical Table",
        "query": "TRUNCATE historical_data;",
        "postgreSQLConfig": "c1bde5c5cae042e2",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 430,
        "y": 60,
        "wires": [
            [
                "ce6ffb3b803686fc"
            ]
        ]
    },
    {
        "id": "501e883d75814a02",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "Insert Historical Data",
        "query": "\nINSERT INTO historical_data\n(date, temperature, label)\nVALUES (TO_TIMESTAMP($1,'YYYY-MM-DD HH24:MI:SS'), $2, $3)\n;\n",
        "postgreSQLConfig": "c1bde5c5cae042e2",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1480,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c828a0a1d636b849",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "Truncate Online Table",
        "query": "TRUNCATE online_data;",
        "postgreSQLConfig": "c1bde5c5cae042e2",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 420,
        "y": 480,
        "wires": [
            [
                "691504a54d0a2ebf"
            ]
        ]
    },
    {
        "id": "c4e4382e292dfdfe",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "Insert Online Data",
        "query": "\nINSERT INTO online_data\n(date, temperature, label)\nVALUES (TO_TIMESTAMP($1,'YYYY-MM-DD HH24:MI:SS'), $2, $3)\n;\n",
        "postgreSQLConfig": "c1bde5c5cae042e2",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 670,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "e38fcd69b348ee88",
        "type": "debug",
        "z": "2c26b9058db8173f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 140,
        "wires": []
    },
    {
        "id": "ae7c1c2c7f154272",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "test historical data",
        "query": "SELECT * FROM historical_data\norder by date desc\nlimit 10;",
        "postgreSQLConfig": "c1bde5c5cae042e2",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "e38fcd69b348ee88"
            ]
        ]
    },
    {
        "id": "91d1cb00ae0403c9",
        "type": "inject",
        "z": "2c26b9058db8173f",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "ae7c1c2c7f154272"
            ]
        ]
    },
    {
        "id": "350bec9cbc788d41",
        "type": "mqtt in",
        "z": "2c26b9058db8173f",
        "name": "",
        "topic": "idc/fc55309",
        "qos": "2",
        "datatype": "auto",
        "broker": "41445dc30e2a6a35",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "70fc37ac5fe958a4",
        "type": "debug",
        "z": "2c26b9058db8173f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "label",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 840,
        "wires": []
    },
    {
        "id": "84d479588f89237d",
        "type": "function",
        "z": "2c26b9058db8173f",
        "name": "",
        "func": "var msg2 = msg.payload.split(\",\")\nvar date = msg2[0]\nvar temperature = msg2[1]\nvar label = msg2[2]\n\n\nmsg.params = [date, temperature, label];\n\n\nif (temperature != null)\n    return msg\nelse\n    return \"error\"",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 720,
        "wires": [
            [
                "1641fc6257084e70",
                "70fc37ac5fe958a4"
            ]
        ]
    },
    {
        "id": "1641fc6257084e70",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "Insert Online Data",
        "query": "INSERT INTO online_data\n(date, temperature, label)\nVALUES (TO_TIMESTAMP($1,'YYYY-MM-DD HH24:MI:SS'), $2, $3)\n",
        "postgreSQLConfig": "0b4eaef3d101ee44",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 730,
        "y": 700,
        "wires": [
            [
                "7a963a77bbd85a36"
            ]
        ]
    },
    {
        "id": "f66ffc3d84156454",
        "type": "inject",
        "z": "2c26b9058db8173f",
        "name": "teste_inject",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "olá",
        "payloadType": "str",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "53b904e0bcb74c25"
            ]
        ]
    },
    {
        "id": "53b904e0bcb74c25",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "SELECT * from online_data",
        "query": "SELECT * FROM online_data;",
        "postgreSQLConfig": "0b4eaef3d101ee44",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 360,
        "y": 300,
        "wires": [
            [
                "db6bbba2d267ce26"
            ]
        ]
    },
    {
        "id": "db6bbba2d267ce26",
        "type": "debug",
        "z": "2c26b9058db8173f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "6d70383ae8b8e4ce",
        "type": "inject",
        "z": "2c26b9058db8173f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "492961dbe33c8c36"
            ]
        ]
    },
    {
        "id": "492961dbe33c8c36",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "truncate online data",
        "query": "TRUNCATE online_data;",
        "postgreSQLConfig": "0b4eaef3d101ee44",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 330,
        "y": 360,
        "wires": [
            [
                "ebc7bbf602c46991"
            ]
        ]
    },
    {
        "id": "ebc7bbf602c46991",
        "type": "debug",
        "z": "2c26b9058db8173f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 360,
        "wires": []
    },
    {
        "id": "9f01acfa2ada3958",
        "type": "inject",
        "z": "2c26b9058db8173f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2022 129310293,24,inside",
        "payloadType": "str",
        "x": 130,
        "y": 660,
        "wires": [
            [
                "84d479588f89237d"
            ]
        ]
    },
    {
        "id": "7a963a77bbd85a36",
        "type": "debug",
        "z": "2c26b9058db8173f",
        "name": "insert data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 720,
        "wires": []
    },
    {
        "id": "0691fd5206d6ac27",
        "type": "inject",
        "z": "2c26b9058db8173f",
        "name": "teste_inject",
        "props": [
            {
                "p": "params",
                "v": "[\"2020-12-01 20:30:00.000 +0000\"]",
                "vt": "json"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "34cc2214eb75c9b5",
                "ee33333254eca284"
            ]
        ]
    },
    {
        "id": "34cc2214eb75c9b5",
        "type": "postgresql",
        "z": "2c26b9058db8173f",
        "name": "SELECT * from online_data",
        "query": "SELECT * FROM online_data\nWHERE \"date\" >= TO_TIMESTAMP($1,'YYYY-MM-DD HH24:MI:SS') - INTERVAL '1 week';\n",
        "postgreSQLConfig": "0b4eaef3d101ee44",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 940,
        "y": 240,
        "wires": [
            [
                "213029c7b3c26a02"
            ]
        ]
    },
    {
        "id": "213029c7b3c26a02",
        "type": "debug",
        "z": "2c26b9058db8173f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 240,
        "wires": []
    },
    {
        "id": "ee33333254eca284",
        "type": "debug",
        "z": "2c26b9058db8173f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 300,
        "wires": []
    },
    {
        "id": "95dd76de46f8e762",
        "type": "inject",
        "z": "0cdf456eee4faca2",
        "name": "Post Request",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "headers",
                "v": "{\"content-type\":\"application/json\"}",
                "vt": "json"
            },
            {
                "p": "method",
                "v": "post",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"current_temperature_outside\":31.11423,\"current_temperature_inside\":21.23412,\"current_datetime\":\"2020-12-31 15:00:00\"}",
        "payloadType": "json",
        "x": 270,
        "y": 320,
        "wires": [
            [
                "99e9235e8ff3031f"
            ]
        ]
    },
    {
        "id": "99e9235e8ff3031f",
        "type": "http request",
        "z": "0cdf456eee4faca2",
        "name": "Post Single Temperature",
        "method": "use",
        "ret": "obj",
        "paytoqs": "body",
        "url": "model_service:9090/single",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "dea7c33dee740379"
            ]
        ]
    },
    {
        "id": "dea7c33dee740379",
        "type": "debug",
        "z": "0cdf456eee4faca2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 320,
        "wires": []
    },
    {
        "id": "bdedbc16f8429dce",
        "type": "ui_chart",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "group": "6fcb8fa133925954",
        "order": 20,
        "width": 22,
        "height": 9,
        "label": "Online.data graph inside",
        "chartType": "line",
        "legend": "true",
        "xformat": "DD/MM-HH:mm",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "100",
        "removeOlderPoints": "200",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff0000",
            "#80ffff",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1550,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "532bee294d545fc3",
        "type": "ui_chart",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "group": "6fcb8fa133925954",
        "order": 7,
        "width": 22,
        "height": 9,
        "label": "Online.data graph outside",
        "chartType": "line",
        "legend": "true",
        "xformat": "DD/MM-HH:mm",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "100",
        "removeOlderPoints": "200",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff0000",
            "#80ffff",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1560,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "2916737c7c63561c",
        "type": "ui_button",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "group": "6fcb8fa133925954",
        "order": 2,
        "width": 8,
        "height": 2,
        "passthru": false,
        "label": "Refresh charts",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 1280,
        "y": 720,
        "wires": [
            [
                "bdedbc16f8429dce",
                "532bee294d545fc3",
                "a166f4da1489699e"
            ]
        ]
    },
    {
        "id": "a166f4da1489699e",
        "type": "ui_chart",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "group": "6fcb8fa133925954",
        "order": 33,
        "width": 22,
        "height": 9,
        "label": "Thermal comfort deviations",
        "chartType": "line",
        "legend": "true",
        "xformat": "DD/MM-HH:mm",
        "interpolate": "bezier",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "25",
        "removeOlderPoints": "50",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#ff0000",
            "#80ffff",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1700,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "d48cdd23c411c4c1",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Last week average",
        "func": "var samplesOut = context.get('samplesOut') || [];\nvar meanValOut = flow.get('meanValOut') || 0;\nvar samplesOutCount = context.get('samplesOutCount') || 0;\nvar samplesIn = context.get('samplesIn') || [];\nvar meanValIn = flow.get('meanValIn') || 0;\nvar samplesInCount = context.get('samplesInCount') || 0;\n\nconst weekSampleCount = 7 * 24 * 2; // days * hours * (1 hour / 30 min)\n\nvar samplesLength = msg.payload.outside.data[0].length\nvar currentSampleOutside = msg.payload.outside.data[0][samplesLength - 1][\"y\"];\n\nsamplesOut[samplesOutCount % weekSampleCount] = currentSampleOutside;\nsamplesOutCount += 1;\n\nvar sumOut = 0;\nfor (let i = 0; i < samplesOut.length; i++) {\n    sumOut += samplesOut[i];\n}\nmeanValOut = sumOut / samplesOut.length;\n\nsamplesLength = msg.payload.inside.data[0].length\nvar currentSampleInside = msg.payload.inside.data[0][samplesLength - 1][\"y\"];\n\nsamplesIn[samplesInCount % weekSampleCount] = currentSampleInside;\nsamplesInCount += 1;\n\nvar sumIn = 0;\nfor (let i = 0; i < samplesIn.length; i++) {\n    sumIn += samplesIn[i];\n}\nmeanValIn = sumIn / samplesIn.length;\n\n\ncontext.set('samplesOut', samplesOut);\nflow.set('meanValOut', meanValOut);\ncontext.set('samplesIn', samplesIn);\nflow.set('meanValIn', meanValIn);\ncontext.set('samplesOutCount', samplesOutCount);\ncontext.set('samplesInCount', samplesInCount);\n\nmsg = { \"payload\": { \"meanValOut\": meanValOut, \"meanValIn\": meanValIn}, \"topic\": \"mean_value\"};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 840,
        "wires": [
            [
                "fac47f33fae3512b",
                "f4fb24f99cb1ce11"
            ]
        ]
    },
    {
        "id": "3a7eaf6fd4f57566",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Thermal comfort",
        "func": "var thermalComfort = function(meanVal) {\n    var thermalComfortTemp;\n\n    if (meanVal >= 0 && meanVal <= 9) {\n        thermalComfortTemp = 18 - (23 - 18) * (meanVal / 9);\n    }\n    else if (meanVal >= 9 && meanVal <= 34) {\n        thermalComfortTemp = 18 + (30 - 18) * (meanVal / 25);\n    }\n\n    return thermalComfortTemp;\n}\n\nvar meanVal = flow.get('meanValOut') || 0;\n\nvar thermalComfortTemp = thermalComfort(meanVal);\nvar last_deviations = [];\nvar samplesIn = msg.payload.inside.data[0];\n\nfor (let i = 0; i < samplesIn.length; i++) {\n    last_deviations.push({\n        \"x\": samplesIn[i][\"x\"], \"y\": (samplesIn[i][\"y\"] - thermalComfortTemp)});\n}\n\n// var futureDeviations = [last_deviations[last_deviations.length-1]];\nvar futureDeviations = [];\nvar samplesInPrediction = msg.payload.inside.data[1];\n\nfor (let i = 0; i < samplesInPrediction.length; i++) {\n    futureDeviations.push({\n        \"x\": samplesInPrediction[i][\"x\"], \"y\": (samplesInPrediction[i][\"y\"] - thermalComfortTemp)});\n}\n\nmsg = {\"payload\": {\n        \"thermal_comfort\": thermalComfortTemp,\n        \"deviations\": [{\n            \"series\": [\"Last deviations\", \"Future deviations\"],\n            \"data\": [last_deviations, futureDeviations],\n            \"labels\": [\"\", \"\"]\n        }]\n    }\n}\n\n// msg = {\"payload\": [{\n//     \"series\": [\"Last deviations\", \"Future deviations\"],\n//     \"data\": [last_deviations, futureDeviations],\n//     \"labels\": [\"\", \"\"]}],\n//     \"topic\": \"deviations\"\n// };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 640,
        "wires": [
            [
                "f0fbd12790d3cb40",
                "4dc8dbc0fb7324f7",
                "76db7c41d866df7e"
            ]
        ]
    },
    {
        "id": "ed8b32dff0e1f1c2",
        "type": "ui_gauge",
        "z": "17ea79a5b6ded39b",
        "name": "Thermal comfort temperature ",
        "group": "6fcb8fa133925954",
        "order": 34,
        "width": 8,
        "height": 5,
        "gtype": "gage",
        "title": "Thermal comfort temperature ",
        "label": "*C",
        "format": "{{value | number:2}}",
        "min": "0",
        "max": "30",
        "colors": [
            "#2260df",
            "#c0c0c0",
            "#e92929"
        ],
        "seg1": "-1",
        "seg2": "1",
        "className": "",
        "x": 1700,
        "y": 640,
        "wires": []
    },
    {
        "id": "f0fbd12790d3cb40",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "var thermalComfortTemp = msg.payload.thermal_comfort;\n\nmsg = {\n    \"payload\": thermalComfortTemp,\n    \"topic\": \"thermal_comfort\"\n};\n\nreturn msg;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 640,
        "wires": [
            [
                "ed8b32dff0e1f1c2"
            ]
        ]
    },
    {
        "id": "a4bb329f6b67a787",
        "type": "http request",
        "z": "17ea79a5b6ded39b",
        "name": "Post Single Temperature",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "body",
        "url": "model_service:9090/single",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "x": 150,
        "y": 400,
        "wires": [
            [
                "996fa906580af09c"
            ]
        ]
    },
    {
        "id": "cc3d877a66e41a9b",
        "type": "mqtt in",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "topic": "idc/fc55309/insert",
        "qos": "2",
        "datatype": "auto",
        "broker": "41445dc30e2a6a35",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 160,
        "wires": [
            [
                "b095af2ebd6dcbb3"
            ]
        ]
    },
    {
        "id": "b095af2ebd6dcbb3",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "var msg2 = msg.payload.split(\",\")\nvar date = msg2[0]\nvar temperature = msg2[1]\nvar label = msg2[2]\n\nif (label == \"inside\")\n    flow.set('receivedInsideTemp', true);\nif (label == \"outside\")\n    flow.set('receivedOutsideTemp', true);\n\nmsg.params = [date,temperature];\n\nmsg.payload = {\n    \"label\": label,\n    \"date\": date,\n    \"temperature\": temperature\n}\n\nif (temperature != null)\n    return msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 200,
        "wires": [
            [
                "0aade698a244d235",
                "f7abafb56d1473d6"
            ]
        ]
    },
    {
        "id": "48093e4e59f30c8b",
        "type": "postgresql",
        "z": "17ea79a5b6ded39b",
        "name": "Insert Online Data Outside",
        "query": "INSERT INTO online_data\n(date, temperature, label)\nVALUES (TO_TIMESTAMP($1,'YYYY-MM-DD HH24:MI:SS'), $2, 'outside')\n",
        "postgreSQLConfig": "0b4eaef3d101ee44",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 960,
        "y": 160,
        "wires": [
            [
                "83a2aa3476a88370"
            ]
        ]
    },
    {
        "id": "a6e7b6f5901b9b7a",
        "type": "postgresql",
        "z": "17ea79a5b6ded39b",
        "name": "Get Stored Temps",
        "query": "SELECT * FROM online_data\nWHERE \"date\" >= TO_TIMESTAMP($1,'YYYY-MM-DD HH24:MI:SS') - INTERVAL '15:10 hours'\nORDER BY \"date\" desc;\n",
        "postgreSQLConfig": "0b4eaef3d101ee44",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1290,
        "y": 380,
        "wires": [
            [
                "ca47f5dd5ac075d4"
            ]
        ]
    },
    {
        "id": "847ddc9524b4d766",
        "type": "postgresql",
        "z": "17ea79a5b6ded39b",
        "name": "Insert Online Data Inside",
        "query": "INSERT INTO online_data\n(date, temperature, label)\nVALUES (TO_TIMESTAMP($1,'YYYY-MM-DD HH24:MI:SS'), $2, 'inside')\n",
        "postgreSQLConfig": "0b4eaef3d101ee44",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "f4ae8a11b3526990"
            ]
        ]
    },
    {
        "id": "f7abafb56d1473d6",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "payload.label",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "outside",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "inside",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "bff4bb785427cbf9"
            ],
            [
                "a4085e7c04372539"
            ]
        ]
    },
    {
        "id": "0aade698a244d235",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "\n\nvar outDateTime = context.get('outDateTime') || \"\";\nvar outTemperature = context.get('outTemperature') || null;\n\nvar inDateTime = context.get('inDateTime') || \"\";\nvar inTemperature = context.get('inTemperature') || null;\n\nif (msg.payload.label == \"inside\") {\n    inDateTime = msg.payload.date\n    inTemperature = msg.payload.temperature\n} else if (msg.payload.label == \"outside\") {\n    outDateTime = msg.payload.date\n    outTemperature = msg.payload.temperature\n} else {\n    throw \"\";\n}\n\n\n\n\nif (outDateTime != \"\")\n    context.set('outDateTime', outDateTime);\nif (outTemperature != null)\n    context.set('outTemperature', outTemperature);\n\nif (inDateTime != \"\")\n    context.set('inDateTime', inDateTime);\nif (inTemperature != null)\n    context.set('inTemperature', inTemperature);\n\nlet outDateParsed = Date.parse(outDateTime);\nlet inDateParsed = Date.parse(inDateTime);\n\n\nif (inDateParsed >= outDateParsed + (3600000 * 1)) {\n    msg.topic = 0\n    msg.payload = {\n        \"current_temperature_inside\": inTemperature,\n        \"current_datetime\": outDateTime\n    }\n    return msg;\n} else if (outDateParsed >= inDateParsed + (3600000 * 1)) {\n    msg.topic = 1\n    msg.payload = {\n        \"current_temperature_outside\": outTemperature,\n        \"current_datetime\": outDateTime\n    }\n    msg.headers = { \"content-type\": \"application/json\" }\n    return msg;\n} else if (outDateTime == inDateTime) {\n    msg.topic = 1\n    msg.payload = {\n        \"current_temperature_outside\": outTemperature,\n        \"current_temperature_inside\": inTemperature,\n        \"current_datetime\": outDateTime\n    }\n    msg.headers = { \"content-type\": \"application/json\" }\n    return msg;\n}\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 280,
        "wires": [
            [
                "ad02cbd482dbea79"
            ]
        ]
    },
    {
        "id": "ad02cbd482dbea79",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "Single or Dual Temp",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 160,
        "y": 340,
        "wires": [
            [
                "a1c0cca62067a4b4"
            ],
            [
                "a4bb329f6b67a787"
            ]
        ]
    },
    {
        "id": "a1c0cca62067a4b4",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "msg.params = [msg.payload.current_datetime]\nmsg.topic = \"new_data\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "b66a7252f6e08d18",
                "462aee508abb1d32"
            ]
        ]
    },
    {
        "id": "b66a7252f6e08d18",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Join database and new data",
        "func": "function toTimestamp(strDate) {\n    var datum = Date.parse(strDate);\n    return datum;\n}\n\nvar outsidePreds = context.get('outsidePreds') || [];\nvar insidePreds = context.get('insidePreds') || [];\nvar currentTempOut = context.get('currentTempOut') || null;\nvar currentTempIn = context.get('currentTempIn') || null;\nvar currentDateTime = context.get('currentDateTime') || null;\n\nvar dbTempOutside = [];\nvar dbTempInside = [];\n\nif (msg.topic == \"new_data\") {\n\n    currentDateTime = toTimestamp(msg.payload.current_datetime);\n    currentTempOut = msg.payload.current_temperature_outside;\n    currentTempIn = msg.payload.current_temperature_inside;\n\n    outsidePreds.length = 0;\n    outsidePreds.push({ \"x\": currentDateTime, \"y\": currentTempOut });\n    for (let i = 0; i < msg.payload.OutsidePreds.length; i++) {\n        let predictionObject = {\n            \"x\": currentDateTime + ((i + 1) * 1800000), \"y\": msg.payload.OutsidePreds[i]\n        };\n        outsidePreds.push(predictionObject);\n    }\n\n    insidePreds.length = 0;\n    insidePreds.push({ \"x\": currentDateTime, \"y\": currentTempIn });\n    for (let i = 0; i < msg.payload.InsidePreds.length; i++) {\n        let predictionObject = { \n            \"x\": currentDateTime + ((i + 1) * 1800000), \"y\": msg.payload.InsidePreds[i]\n        };\n        insidePreds.push(predictionObject);\n    }\n    \n} \nelse if (msg.topic == \"db_data\") {\n\n    // dbTempOutside.push({ \"x\": currentDateTime, \"y\": currentTempOut });\n    // dbTempInside.push({ \"x\": currentDateTime, \"y\": currentTempIn });\n\n    for (let i = (msg.payload.length - 1); i >= 0 ; i--) {\n        let newSample = { \"x\": Date.parse(msg.payload[i].date), \"y\": Number(msg.payload[i].temperature) }\n        if (msg.payload[i].label == \"outside\") {\n            dbTempOutside.push(newSample);\n        } else if (msg.payload[i].label == \"inside\") {\n            dbTempInside.push(newSample);\n        }\n    }\n\n    msg = {\n        \"payload\": {\n            \"outside\": \n            {   \"series\":  [\"Measurements\", \"Predictions\"],\n                \"data\": [dbTempOutside, outsidePreds],\n                \"labels\": [\"\", \"\"]},\n\n            \"inside\":\n            {\n                \"series\": [\"Measurements\", \"Predictions\"],\n                \"data\": [dbTempInside, insidePreds],\n                \"labels\": [\"\", \"\"]}\n        },\n        \"topic\": \"all_data\"\n    }\n} \nelse {\n    //TODO: differnet msg.topic\n}\n\ncontext.set('outsidePreds', outsidePreds);\ncontext.set('insidePreds', insidePreds);\ncontext.set('currentTempOut', currentTempOut);\ncontext.set('currentTempIn', currentTempIn);\ncontext.set('currentDateTime', currentDateTime);\n\nif (msg.topic == \"all_data\") {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 640,
        "wires": [
            [
                "8d4b4e5a54a52bca",
                "d48cdd23c411c4c1",
                "97ca165e9762f387",
                "3a7eaf6fd4f57566",
                "966e746c09116269",
                "656fd0c6e717f0f1",
                "69a5dd84bfcbeaa7"
            ]
        ]
    },
    {
        "id": "c71526fc7d248251",
        "type": "postgresql",
        "z": "17ea79a5b6ded39b",
        "name": "truncate online data",
        "query": "TRUNCATE online_data;",
        "postgreSQLConfig": "0b4eaef3d101ee44",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 370,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "05f84bcbeb8a648c",
        "type": "mqtt in",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "topic": "idc/fc55309/truncate",
        "qos": "1",
        "datatype": "auto",
        "broker": "41445dc30e2a6a35",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 40,
        "wires": [
            [
                "c71526fc7d248251"
            ]
        ]
    },
    {
        "id": "a4085e7c04372539",
        "type": "semaphore-take",
        "z": "17ea79a5b6ded39b",
        "config": "b783a82559256d8c",
        "name": "Inside Take",
        "x": 670,
        "y": 220,
        "wires": [
            [
                "847ddc9524b4d766"
            ]
        ]
    },
    {
        "id": "d868972b4bbb0bd9",
        "type": "semaphore-leave",
        "z": "17ea79a5b6ded39b",
        "config": "b783a82559256d8c",
        "name": "Inside Leave",
        "x": 1650,
        "y": 480,
        "wires": [
            [
                "b66a7252f6e08d18"
            ]
        ]
    },
    {
        "id": "bff4bb785427cbf9",
        "type": "semaphore-take",
        "z": "17ea79a5b6ded39b",
        "config": "7b1f1ae81f8afdb8",
        "name": "Outside Take",
        "x": 670,
        "y": 160,
        "wires": [
            [
                "48093e4e59f30c8b"
            ]
        ]
    },
    {
        "id": "83a2aa3476a88370",
        "type": "semaphore-leave",
        "z": "17ea79a5b6ded39b",
        "config": "7b1f1ae81f8afdb8",
        "name": "Outside Leave",
        "x": 1200,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f4ae8a11b3526990",
        "type": "semaphore-leave",
        "z": "17ea79a5b6ded39b",
        "config": "b783a82559256d8c",
        "name": "Inside Leave",
        "x": 1190,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "36290cd3a8e58a2a",
        "type": "semaphore-leave",
        "z": "17ea79a5b6ded39b",
        "config": "7b1f1ae81f8afdb8",
        "name": "Outside Leave",
        "x": 1480,
        "y": 440,
        "wires": [
            [
                "d3433cb3019e8fd2"
            ]
        ]
    },
    {
        "id": "eb4bb60b028242ad",
        "type": "semaphore-leave",
        "z": "17ea79a5b6ded39b",
        "config": "7b1f1ae81f8afdb8",
        "name": "Outside Leave",
        "x": 2180,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "aa90a75e06f6051c",
        "type": "semaphore-leave",
        "z": "17ea79a5b6ded39b",
        "config": "b783a82559256d8c",
        "name": "Inside Leave",
        "x": 2030,
        "y": 240,
        "wires": [
            [
                "53bff4c9f679ce11"
            ]
        ]
    },
    {
        "id": "844e12c0ee71490c",
        "type": "e-mail",
        "z": "17ea79a5b6ded39b",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Database Monitorization Email",
        "x": 2090,
        "y": 380,
        "wires": []
    },
    {
        "id": "ee400b83cec1e390",
        "type": "template",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<h2>\n    There is a problem with Temperature monitoring Database/Model!\n</h2>",
        "output": "str",
        "x": 1840,
        "y": 340,
        "wires": [
            [
                "844e12c0ee71490c"
            ]
        ]
    },
    {
        "id": "c27f360f8f4351b1",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "\nlet receivedOutsideTemp = flow.get('receivedOutsideTemp') || false;\nlet receivedInsideTemp = flow.get('receivedInsideTemp') || false;\n\n\nlet receivedTemp = receivedOutsideTemp || receivedInsideTemp;\n\nmsg.payload = {\n    \"receivedTemp\": receivedTemp,\n    \"receivedOutsideTemp\": receivedOutsideTemp,\n    \"receivedInsideTemp\": receivedInsideTemp\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 200,
        "wires": [
            [
                "71b373cc05a6c491"
            ]
        ]
    },
    {
        "id": "71b373cc05a6c491",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "payload.receivedTemp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1670,
        "y": 360,
        "wires": [
            [
                "ee400b83cec1e390",
                "f0fb7a94012fc16e"
            ],
            [
                "c7b27ea186bc2c3c"
            ]
        ]
    },
    {
        "id": "d8e3ea7ab1905f28",
        "type": "template",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<h2>\n    No Temperatures!!\n</h2>",
        "output": "str",
        "x": 1840,
        "y": 420,
        "wires": [
            [
                "844e12c0ee71490c"
            ]
        ]
    },
    {
        "id": "c7b27ea186bc2c3c",
        "type": "join",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "",
        "joiner": "",
        "joinerType": "bin",
        "accumulate": false,
        "timeout": "",
        "count": "300",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1670,
        "y": 420,
        "wires": [
            [
                "d8e3ea7ab1905f28"
            ]
        ]
    },
    {
        "id": "462aee508abb1d32",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "receivedOutsideTemp",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 340,
        "wires": [
            [
                "876509e99fd95351"
            ],
            [
                "940bf16389dd59b2",
                "8b85a5d469393b24"
            ]
        ]
    },
    {
        "id": "940bf16389dd59b2",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "receivedInsideTemp",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 360,
        "wires": [
            [
                "7a3c5c258e405b87"
            ],
            [
                "a6e7b6f5901b9b7a",
                "975536733767e1e2"
            ]
        ]
    },
    {
        "id": "8b85a5d469393b24",
        "type": "template",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<h2>\n    There is a problem with Inside Temperature Sensor!\n</h2>",
        "output": "str",
        "x": 1020,
        "y": 480,
        "wires": [
            [
                "156075143a8fe95a"
            ]
        ]
    },
    {
        "id": "156075143a8fe95a",
        "type": "e-mail",
        "z": "17ea79a5b6ded39b",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Sensor Monitorization Email",
        "x": 1240,
        "y": 480,
        "wires": []
    },
    {
        "id": "975536733767e1e2",
        "type": "template",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<h2>\n    There is a problem with Outside Temperature Sensor!\n</h2>",
        "output": "str",
        "x": 1020,
        "y": 440,
        "wires": [
            [
                "156075143a8fe95a"
            ]
        ]
    },
    {
        "id": "f0fb7a94012fc16e",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "receivedInsideTemp",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1830,
        "y": 280,
        "wires": [
            [
                "aa90a75e06f6051c",
                "4252166de4ee871f"
            ],
            [
                "53bff4c9f679ce11"
            ]
        ]
    },
    {
        "id": "53bff4c9f679ce11",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "receivedOutsideTemp",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2010,
        "y": 300,
        "wires": [
            [
                "9a312a8ec9d60589",
                "eb4bb60b028242ad"
            ]
        ]
    },
    {
        "id": "9a312a8ec9d60589",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "flow.set('receivedOutsideTemp', false);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "4252166de4ee871f",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "flow.set('receivedInsideTemp', false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2020,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "037d877bcfcf12e8",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "receivedOutsideTemp",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 440,
        "wires": [
            [
                "36290cd3a8e58a2a"
            ],
            [
                "d3433cb3019e8fd2"
            ]
        ]
    },
    {
        "id": "d3433cb3019e8fd2",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "receivedInsideTemp",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1470,
        "y": 480,
        "wires": [
            [
                "d868972b4bbb0bd9"
            ],
            [
                "b66a7252f6e08d18"
            ]
        ]
    },
    {
        "id": "876509e99fd95351",
        "type": "semaphore-take",
        "z": "17ea79a5b6ded39b",
        "config": "7b1f1ae81f8afdb8",
        "name": "Outside Take",
        "x": 970,
        "y": 280,
        "wires": [
            [
                "940bf16389dd59b2"
            ]
        ]
    },
    {
        "id": "7a3c5c258e405b87",
        "type": "semaphore-take",
        "z": "17ea79a5b6ded39b",
        "config": "b783a82559256d8c",
        "name": "Inside Take",
        "x": 1210,
        "y": 320,
        "wires": [
            [
                "a6e7b6f5901b9b7a"
            ]
        ]
    },
    {
        "id": "02ad68a06ac77626",
        "type": "catch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "scope": [
            "48093e4e59f30c8b",
            "a6e7b6f5901b9b7a",
            "847ddc9524b4d766"
        ],
        "uncaught": false,
        "x": 1470,
        "y": 260,
        "wires": [
            [
                "c27f360f8f4351b1"
            ]
        ]
    },
    {
        "id": "fc3c31e41df1b1a1",
        "type": "catch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "scope": [
            "a6e7b6f5901b9b7a"
        ],
        "uncaught": false,
        "x": 1130,
        "y": 280,
        "wires": [
            [
                "c93cb329cbd0ebb3"
            ]
        ]
    },
    {
        "id": "c93cb329cbd0ebb3",
        "type": "template",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "[]",
        "output": "json",
        "x": 1280,
        "y": 280,
        "wires": [
            [
                "ca47f5dd5ac075d4"
            ]
        ]
    },
    {
        "id": "b039bcc7a3dccabb",
        "type": "template",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<h2>\n    There is a problem with the Model Service!!\n</h2>",
        "output": "str",
        "x": 320,
        "y": 520,
        "wires": [
            [
                "254e0f0cea351608"
            ]
        ]
    },
    {
        "id": "254e0f0cea351608",
        "type": "e-mail",
        "z": "17ea79a5b6ded39b",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "ModelService Monitorization Email",
        "x": 540,
        "y": 520,
        "wires": []
    },
    {
        "id": "7bda5f3aaac84413",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nvar days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n\nvar d = new Date();\n\n\n\n\nvar hr = d.getHours();\nif (hr < 10) {\n    hr = \"0\" + hr;\n}\nif (hr == 0)\n    hr = \"00\"\n\n\n\n\nvar min = d.getMinutes();\nif (min < 10) {\n    min = \"0\" + min;\n}\nif (min == 0)\n    min = \"00\"\n\n\n\n\nvar sec = d.getSeconds();\nif (sec < 10) {\n    sec = \"0\" + sec;\n}\nif (sec == 0)\n    sec = \"00\"\n\n\n\n\nvar day = d.getDate();\n\n\n\n\nvar month = d.getMonth() + 1;\n\n\n\n\nvar year = d.getFullYear();\n\n\n\n\nlet currentTimeParsed = year + \"-\" + month + \"-\" + day + \" \" + hr + \":\" + min + \":\" + sec;\n\nmsg.payload = {\n    \"current_datetime\": currentTimeParsed\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 480,
        "wires": [
            [
                "a1c0cca62067a4b4"
            ]
        ]
    },
    {
        "id": "996fa906580af09c",
        "type": "switch",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "property": "payload.detail",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 130,
        "y": 460,
        "wires": [
            [
                "a1c0cca62067a4b4"
            ],
            [
                "7bda5f3aaac84413",
                "b039bcc7a3dccabb"
            ]
        ]
    },
    {
        "id": "ca47f5dd5ac075d4",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "msg.topic = \"db_data\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 380,
        "wires": [
            [
                "037d877bcfcf12e8"
            ]
        ]
    },
    {
        "id": "8d4b4e5a54a52bca",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Forward inside data",
        "func": "msg.payload = [msg.payload.inside];\nmsg.topic = \"data_inside\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 680,
        "wires": [
            [
                "bdedbc16f8429dce",
                "fc0c9e30a2dc37ee"
            ]
        ]
    },
    {
        "id": "97ca165e9762f387",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Forward outside data",
        "func": "msg.payload = [msg.payload.outside];\nmsg.topic = \"data_outside\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 760,
        "wires": [
            [
                "532bee294d545fc3",
                "33ef7777599b36a5"
            ]
        ]
    },
    {
        "id": "f4fb24f99cb1ce11",
        "type": "ui_text",
        "z": "17ea79a5b6ded39b",
        "group": "6fcb8fa133925954",
        "order": 16,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Last week average outside temperature ",
        "format": "{{msg.payload.meanValOut | number:2}}",
        "layout": "row-left",
        "className": "",
        "x": 1600,
        "y": 840,
        "wires": []
    },
    {
        "id": "fac47f33fae3512b",
        "type": "ui_text",
        "z": "17ea79a5b6ded39b",
        "group": "6fcb8fa133925954",
        "order": 29,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Last week average inside temperature ",
        "format": "{{msg.payload.meanValIn | number:2}}",
        "layout": "row-left",
        "className": "",
        "x": 1590,
        "y": 880,
        "wires": []
    },
    {
        "id": "966e746c09116269",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Last week min/max",
        "func": "var samplesOut = context.get('samplesOut') || [];\nvar samplesIn = context.get('samplesIn') || [];\nvar samplesOutCount = context.get('samplesOutCount') || 0;\nvar samplesInCount = context.get('samplesInCount') || 0;\nvar maxTempOut = flow.get(\"maxTempOut\") || 0;\nvar maxTempIn = flow.get(\"maxTempIn\") || 0;\nvar minTempOut = flow.get(\"minTempOut\") || 0;\nvar minTempIn = flow.get(\"minTempIn\") || 0;\n\nconst weekSampleCount = 7 * 24 * 2;\n\nvar samplesOutLength = msg.payload.outside.data[0].length\nvar currentSampleOutside = msg.payload.outside.data[0][samplesOutLength - 1];\nsamplesOut[samplesOutCount % samplesOutLength] = currentSampleOutside;\nsamplesOutCount++;\n\nmaxTempOut = currentSampleOutside[\"y\"];\nminTempOut = currentSampleOutside[\"y\"];\nsamplesOut.forEach(function(element) {\n    if (element[\"y\"] > maxTempOut) {\n        maxTempOut = element[\"y\"];\n    }\n    else if (element[\"y\"] < minTempOut) {\n        minTempOut = element[\"y\"];\n    }\n});\n////////////////////////////////////////////////////////////////////////////////////\nvar samplesInLength = msg.payload.outside.data[0].length\nvar currentSampleInside = msg.payload.outside.data[0][samplesInLength - 1];\nsamplesIn[samplesInCount % samplesInLength] = currentSampleInside;\nsamplesInCount++;\n\nmaxTempIn = currentSampleInside[\"y\"];\nminTempIn = currentSampleInside[\"y\"];\nsamplesIn.forEach(function (element) {\n    if (element[\"y\"] > maxTempIn) {\n        maxTempIn = element[\"y\"];\n    }\n    else if (element[\"y\"] < minTempIn) {\n        minTempIn = element[\"y\"];\n    }\n});\n\n\ncontext.set('samplesOut', samplesOut)\ncontext.set('samplesIn', samplesIn)\ncontext.set('samplesOutCount', samplesOutCount)\ncontext.set('samplesInCount', samplesInCount)\nflow.set(\"maxTempOut\", maxTempOut)\nflow.set(\"maxTempIn\", maxTempIn)\nflow.set(\"minTempOut\", maxTempOut)\nflow.set(\"minTempIn\", maxTempIn)\n\n\nmsg = { \"payload\": { \"insideMax\": maxTempIn, \"insideMin\": minTempIn,\n            \"outsideMax\": maxTempOut, \"outsideMin\": minTempIn},\n        \"topic\": \"min_max_values\"};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 920,
        "wires": [
            [
                "c19e6a12e0dde299",
                "32524e6947429075",
                "940c5be5a2dafb05",
                "ba0dfa4ef069a636"
            ]
        ]
    },
    {
        "id": "c19e6a12e0dde299",
        "type": "ui_text",
        "z": "17ea79a5b6ded39b",
        "group": "6fcb8fa133925954",
        "order": 14,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Last week max outside temperature ",
        "format": "{{msg.payload.outsideMax | number:2}}",
        "layout": "row-left",
        "className": "",
        "x": 1580,
        "y": 920,
        "wires": []
    },
    {
        "id": "940c5be5a2dafb05",
        "type": "ui_text",
        "z": "17ea79a5b6ded39b",
        "group": "6fcb8fa133925954",
        "order": 13,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Last week min outside temperature ",
        "format": "{{msg.payload.outsideMin | number:2}}",
        "layout": "row-left",
        "className": "",
        "x": 1580,
        "y": 960,
        "wires": []
    },
    {
        "id": "32524e6947429075",
        "type": "ui_text",
        "z": "17ea79a5b6ded39b",
        "group": "6fcb8fa133925954",
        "order": 27,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Last week max inside temperature ",
        "format": "{{msg.payload.insideMax | number:2}}",
        "layout": "row-left",
        "className": "",
        "x": 1580,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ba0dfa4ef069a636",
        "type": "ui_text",
        "z": "17ea79a5b6ded39b",
        "group": "6fcb8fa133925954",
        "order": 26,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Last week min inside temperature ",
        "format": "{{msg.payload.outsideMin | number:2}}",
        "layout": "row-left",
        "className": "",
        "x": 1580,
        "y": 1040,
        "wires": []
    },
    {
        "id": "656fd0c6e717f0f1",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Last week standard deviation",
        "func": "var samplesOut = context.get('samplesOut') || [];\nvar samplesIn = context.get('samplesIn') || [];\nvar samplesOutCount = context.get('samplesOutCount') || [];\nvar samplesInCount = context.get('samplesInCount') || [];\nvar meanValOut = flow.get('meanValOut') || 0;\nvar meanValIn = flow.get('meanValOut') || 0;\n\nconst weekSampleCount = 7 * 24 * 2;\n\nvar samplesOutLength = msg.payload.outside.data[0].length\nvar currentSampleOutside = msg.payload.outside.data[0][samplesOutLength - 1];\n\nsamplesOut[samplesOutCount % samplesOutLength] = currentSampleOutside;\nsamplesOutCount++;\n\nvar sum = 0;\nsamplesOut.forEach(function (element) {\n    sum += (element[\"y\"] - meanValOut) * (element[\"y\"] - meanValOut);\n});\nvar stnDevOut = Math.sqrt(sum / samplesOut.length);\n/////////////////////////////////////////////////////////////////////////////////////\nvar samplesInLength = msg.payload.outside.data[0].length\nvar currentSampleInside = msg.payload.outside.data[0][samplesInLength - 1];\n\nsamplesIn[samplesInCount % samplesInLength] = currentSampleInside;\nsamplesInCount++;\n\nvar sum = 0;\nsamplesIn.forEach(function (element) {\n    sum += (element[\"y\"] - meanValIn) * (element[\"y\"] - meanValIn);\n});\nvar stnDevIn = Math.sqrt(sum / samplesIn.length);\n\ncontext.set('samplesOut', samplesOut)\ncontext.set('samplesIn', samplesIn)\ncontext.set('samplesOutCount', samplesOutCount)\ncontext.set('samplesInCount', samplesInCount)\nflow.set(\"stnDevOut\", stnDevOut);\nflow.set(\"stnDevIn\", stnDevIn);\n\nmsg = { \"payload\": { \"stnDevOut\": stnDevOut, \"stnDevIn\": stnDevIn}, \"topic\": \"standard_dev\"};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 1080,
        "wires": [
            [
                "9785836cd30a7198",
                "1b06c7fe854123f0"
            ]
        ]
    },
    {
        "id": "9785836cd30a7198",
        "type": "ui_text",
        "z": "17ea79a5b6ded39b",
        "group": "6fcb8fa133925954",
        "order": 17,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Last week standard deviation outside",
        "format": "{{msg.payload.stnDevOut | number:2}}",
        "layout": "row-left",
        "className": "",
        "x": 1590,
        "y": 1080,
        "wires": []
    },
    {
        "id": "9ee395c2ff59c52e",
        "type": "ui_table",
        "z": "17ea79a5b6ded39b",
        "d": true,
        "group": "6fcb8fa133925954",
        "name": "Statistical values (7-day period)",
        "order": 39,
        "width": 30,
        "height": 1,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1570,
        "y": 1160,
        "wires": []
    },
    {
        "id": "69a5dd84bfcbeaa7",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "d": true,
        "name": "Statistical values",
        "func": "var meanValOut = flow.get('meanValOut') || 0;\nvar meanValIn = flow.get('meanValIn') || 0;\nvar maxTempOut = flow.get(\"maxTempOut\") || 0;\nvar maxTempIn = flow.get(\"maxTempIn\") || 0;\nvar minTempOut = flow.get(\"minTempOut\") || 0;\nvar minTempIn = flow.get(\"minTempIn\") || 0;\nvar stnDevOut = flow.get(\"stnDevOut\") || 0;\nvar stnDevIn = flow.get(\"stnDevIn\") || 0;\n\nmsg = {\n    \"payload\": [{\n        \"Max temp. (outside)\": maxTempOut.toFixed(2),\n        \"Max temp. (inside)\": maxTempIn.toFixed(2),\n        \"Min temp. (outside)\": minTempOut.toFixed(2),\n        \"Min temp. (inside)\": minTempIn.toFixed(2),\n        \"Standard dev. (outside)\": stnDevOut.toFixed(2),\n        \"Standard dev. (inside)\": stnDevIn.toFixed(2),\n        \"Average value (outside)\": meanValOut.toFixed(2),\n        \"Average value (inside)\": meanValIn.toFixed(2)\n    }]\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 1160,
        "wires": [
            [
                "9ee395c2ff59c52e"
            ]
        ]
    },
    {
        "id": "1b06c7fe854123f0",
        "type": "ui_text",
        "z": "17ea79a5b6ded39b",
        "group": "6fcb8fa133925954",
        "order": 30,
        "width": 7,
        "height": 2,
        "name": "",
        "label": "Last week standard deviation inside",
        "format": "{{msg.payload.stnDevIn | number:2}}",
        "layout": "row-left",
        "className": "",
        "x": 1590,
        "y": 1120,
        "wires": []
    },
    {
        "id": "cefd4c48c89f1a76",
        "type": "ui_gauge",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "group": "6fcb8fa133925954",
        "order": 10,
        "width": 8,
        "height": 5,
        "gtype": "gage",
        "title": "Current temperature outside",
        "label": "*C",
        "format": "{{value | number:2}}",
        "min": "-10",
        "max": "40",
        "colors": [
            "#0076b5",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "10",
        "seg2": "20",
        "className": "",
        "x": 1820,
        "y": 800,
        "wires": []
    },
    {
        "id": "33ef7777599b36a5",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Extract current temperature",
        "func": "var length = msg.payload[0].data[0].length;\nvar measurementData = msg.payload[0].data[0];\n\nmsg = {\"payload\":\n    measurementData[length - 1][\"y\"]};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 800,
        "wires": [
            [
                "cefd4c48c89f1a76"
            ]
        ]
    },
    {
        "id": "fc0c9e30a2dc37ee",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "Extract current temperature",
        "func": "var length = msg.payload[0].data[0].length;\nvar measurementData = msg.payload[0].data[0];\n\nmsg = {\"payload\":\n    measurementData[length - 1][\"y\"]};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 720,
        "wires": [
            [
                "5593a6c0f87e72aa"
            ]
        ]
    },
    {
        "id": "5593a6c0f87e72aa",
        "type": "ui_gauge",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "group": "6fcb8fa133925954",
        "order": 23,
        "width": 8,
        "height": 5,
        "gtype": "gage",
        "title": "Current temperature inside",
        "label": "*C",
        "format": "{{value | number:2}}",
        "min": "0",
        "max": "30",
        "colors": [
            "#0076b5",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "15",
        "seg2": "25",
        "className": "",
        "x": 1820,
        "y": 720,
        "wires": []
    },
    {
        "id": "4dc8dbc0fb7324f7",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "var length = msg.payload.deviations[0].data[0].length;\nvar deviation = msg.payload.deviations[0].data[0][length-1][\"y\"];\n\nmsg = {\n    \"payload\": deviation,\n    \"topic\": \"current_deviation\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 600,
        "wires": [
            [
                "81fb762d2dc85991"
            ]
        ]
    },
    {
        "id": "81fb762d2dc85991",
        "type": "ui_gauge",
        "z": "17ea79a5b6ded39b",
        "name": "Thermal comfort deviation",
        "group": "6fcb8fa133925954",
        "order": 35,
        "width": 8,
        "height": 5,
        "gtype": "gage",
        "title": "Thermal comfort deviation",
        "label": "*C",
        "format": "{{value | number:2}}",
        "min": "-5",
        "max": "5",
        "colors": [
            "#2260df",
            "#c0c0c0",
            "#e92929"
        ],
        "seg1": "-1",
        "seg2": "1",
        "className": "",
        "x": 1700,
        "y": 600,
        "wires": []
    },
    {
        "id": "76db7c41d866df7e",
        "type": "function",
        "z": "17ea79a5b6ded39b",
        "name": "",
        "func": "var deviations = msg.payload.deviations;\n\nmsg = {\n    \"payload\": deviations,\n    \"topic\": \"deviations\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 560,
        "wires": [
            [
                "a166f4da1489699e"
            ]
        ]
    }
]