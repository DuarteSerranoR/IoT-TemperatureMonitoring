version: "3.8"

services:
  node-red:
    profiles:
      - main_vm
      - total
    env_file: .env
    image: duarter/py-node_red:${PY_NODERED}
    build:
      context: ./node-red
      dockerfile: Dockerfile
    #entrypoint: "tail -f /dev/null"
    container_name: node_red
    volumes:
      - ./data/node_red:/data
      - ./model:/app/model
      - ./data/datasets/online.data:/app/online.data
      - ./data/datasets/historical.data:/app/historical.data
      #- ./data/temp:/usr/src/node-red
    ports:
      - 1880:1880
  #mosquitto:
  #  profiles:
  #    - broker_vm
  #    - total
  #  image: eclipse-mosquitto:2.0.15
  #  container_name: mosquitto_broker
  #  volumes:
  #    - ./data/mosquitto/config/:/mosquitto/config/:ro
  #    - ./data/mosquitto/log/:/mosquitto/log/
  #    - ./data/mosquitto/data/:/mosquitto/data/
  #  #ports:
  #  #  - 1883:1883
  #  #  - 9001:9001
  timescale_db:
    profiles:
      - main_vm
      - total
    image: timescale/timescaledb:2.8.1-pg14
    restart: always
    container_name: timescale_db
    environment:
      POSTGRES_USER: timescaledb
      POSTGRES_PASSWORD: password
    #entrypoint: "tail -f /dev/null"
    volumes:
      - ./data/timescaledb2:/var/lib/postgresql/data
    #ports:
    #  - 5432:5432
  #prometheus_postgresql_adapter:
  #  depends_on:
  #  - timescaledb
  #  environment:
  #    TS_PROM_LOG_LEVEL: debug
  #    TS_PROM_DB_CONNECT_RETRIES: 10
  #    TS_PROM_DB_HOST: timescaledb
  #    TS_PROM_DB_USER: timescaledb
  #    TS_PROM_DB_PASSWORD: password
  #    TS_PROM_DB_NAME: postgres
  #    TS_PROM_WEB_TELEMETRY_PATH: /metrics-text
  #  image: timescale/timescale-prometheus:latest
  #  restart: always
  #  ports:
  #  - 9201:9201/tcp
